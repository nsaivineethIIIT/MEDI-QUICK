<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= doctor.name %> - <%= doctor.specialization %></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
    <link rel="stylesheet" href="/css/doctor_profile.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap');

:root {
    --blue: #0188df;
    --black: #444d53;
    --white: #fff;
}

* {
    font-family: "Roboto", sans-serif;
    margin: 0;
    padding: 0;
    text-decoration: none;
    outline: none;
    box-sizing: border-box;
    transition: all linear .2s;
}

html {
    font-size: 62.5%;
    overflow-x: hidden;
    scroll-behavior: smooth;
}

.button {
    height: 3.5rem;
    width: 15rem;
    background: var(--black);
    color: var(--white);
    font-size: 1.7rem;
    text-transform: capitalize;
    border-radius: .5rem;
    cursor: pointer;
    margin: 1rem 0;
    border: .1rem solid var(--blue);
}

.button:hover {
    border: .1rem solid var(--blue);
    background: var(--white);
    color: var(--blue);
    letter-spacing: .2rem;
}

.heading {
    text-align: center;
    font-size: 4rem;
    padding: 1rem;
    padding-top: 1rem;
    color: var(--blue);
    letter-spacing: .1rem;
}

.title {
    text-align: center;
    padding: 0rem 1rem;
    font-size: 2.5rem;
    color: var(--black);
    font-weight: 300;
}

header {
    width: 96%;
    background: var(--white);
    position: fixed;
    top: 2rem;
    left: 50%;
    transform: translate(-50%);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 2rem;
    z-index: 1000;
}

header a {
    color: var(--black);
}

header a:hover {
    color: var(--blue);
}

header .logo {
    font-size: 3rem;
}

header .logo span {
    color: var(--blue);
}

header .navbar ul {
    display: flex;
    align-items: center;
    justify-content: space-between;
    list-style: none;
}

header .navbar ul li {
    margin: 0 1rem;
}

header .navbar ul li a {
    font-size: 2rem;
    color: var(--black);
}

header .navbar ul li a:hover {
    color: var(--blue);
}

header .fa-bars {
    font-size: 3rem;
    color: var(--blue);
    cursor: pointer;
    display: none;
}

header .fa-times {
    transform: rotate(180deg);
}

.header-active {
    top: 0;
    width: 100%;
    box-shadow: .1rem .3rem rgba(0, 0, 0, .3);
}

.footer {
    background: var(--black);
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    padding: 2rem 0;
}

.footer .box {
    width: 30rem;
    margin: 2rem;
    text-align: center;
}

.footer .box:nth-child() {
    text-align: left;
}

.footer .box .logo {
    padding: 2rem 0;
    font-size: 3rem;
    color: var(--white);
}

.footer .box .logo:hover {
    color: var(--blue);
}

.footer .box .logo span {
    color: var(--blue);
}

.footer .box p {
    font-size: 1.5rem;
    color: var(--white);
}

.footer .box a {
    color: var(--white);
    font-size: 2rem;
    display: block;
    padding: .2rem 0;
}

.footer .box a:hover {
    text-decoration: underline;
}

.footer .credit {
    width: 85%;
    padding-top: 1rem;
    font-size: 2rem;
    color: var(--white);
    text-align: center;
    border-top: .2rem solid var(--white);
}

.footer .credit span {
    color: var(--blue);
    text-decoration: underline;
    letter-spacing: .5rem;
}

.close-btn {
    position: absolute;
    top: 12.5%;
    left: 2%;
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
    background: rgba(0, 0, 0, 0.1);
    border-radius: 50%;
    padding: 5px 10px;
    transition: 0.3s;
}

.close-btn:hover {
    background: rgba(0, 0, 0, 0.3);
    color: white;
}

.container {
    display: flex;
    flex-direction: column;
    padding: 20px;
    margin-top: 80px;
}

.left-section {
    width: 80%;
    background: var(--white);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    margin: 0 auto;
    font-size: 1.5rem;
    position: relative;
}

.right-section {
    width: 80%;
    background: var(--white);
    padding: 2rem;
    border-radius: 1rem;
    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.1);
    margin: 20px auto;
    font-size: 1.5rem;
}

.doctor-info {
    display: flex;
    margin-bottom: 20px;
    align-items: center;
}

.doctor-info img {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    margin-right: 20px;
    object-fit: cover;
}

.doctor-details {
    margin-bottom: 20px;
}

.reviews {
    margin-bottom: 20px;
}

.review {
    background: #f4f4f4;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
}

.appointment-slots {
    margin-bottom: 20px;
}

.date-selection {
    display: flex;
    overflow-x: auto;
    gap: 10px;
    margin-bottom: 20px;
    padding-bottom: 10px;
    white-space: nowrap;
}

.date-selection button {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    background: #f9f9f9;
    cursor: pointer;
    white-space: nowrap;
    flex-shrink: 0;
}

.date-selection button.selected {
    background: var(--blue);
    color: white;
}

.slots {
    margin-bottom: 20px;
}

.slots h3 {
    margin-bottom: 10px;
}

.slots button {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    background: #f9f9f9;
    cursor: pointer;
    margin: 5px;
}

.slots button.selected {
    background: var(--blue);
    color: white;
}

.book-btn {
    width: 100%;
    padding: 10px;
    background: var(--black);
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.book-btn:hover {
    background: var(--blue);
}

@media (max-width:768px) {
    html {
        font-size: 55%;
    }

    header .fa-bars {
        display: block;
    }

    header .navbar {
        position: fixed;
        top: -100rem;
        left: 0;
        width: 100%;
        background: var(--white);
        opacity: 0;
    }

    header .navbar ul {
        flex-flow: column;
        padding: 2rem 0;
    }

    header .navbar ul li {
        margin: 1rem 0;
        width: 100%;
        text-align: center;
    }

    header .navbar ul li a {
        font-size: 2rem;
        display: block;
    }

    header .nav-toggle {
        top: 5.5rem;
        opacity: 1;
    }

    .left-section,
    .right-section {
        width: 95%;
        margin: 10px auto;
        padding: 10px;
    }

    .doctor-info {
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .doctor-info img {
        margin-right: 0;
        margin-bottom: 20px;
    }

    .date-selection {
        flex-wrap: wrap;
        justify-content: center;
    }

    .date-selection button {
        margin: 5px;
    }

    .slots button {
        width: 100%;
        margin: 5px 0;
    }
}
    </style>
</head>

<body>
    <header>
        <a href="#" class="logo"><span>M</span>edi<span>Q</span>uick</a>
        <nav class="navbar">
            <ul>
                <li><a href="/about">About Us</a></li>
                <li><a href="/faqs">FAQs</a></li>
                <li><a href="/blogs">Blog</a></li>
                <li><a href="/contact">Contact Us</a></li>
                <li><a href="/patient_profile"><img src="https://static.thenounproject.com/png/638636-200.png"
                            alt="Profile Image" height="30px" width="30px"></a></li>
            </ul>
        </nav>
        <div class="fas fa-bars"></div>
    </header>

    <!-- <div class="container">
        <div class="left-section">
            <div class="close-btn" onclick="closeProfile()">
                <i class="fas fa-times"></i>
            </div>
            <div class="doctor-info">
                <img src="<%= doctor.image %>" alt="Doctor Image">
                <div class="details">
                    <h2>Dr. <%= doctor.name %></h2>
                    <p class="specialty">Specialization: <%= doctor.specialization %></p>
                    <p>Experience: <%= doctor.experience %></p>
                    <p>Qualification: <%= doctor.qualifications %></p>
                    <p>Languages: <%= doctor.languages %></p>
                    <p class="location">Location: <%= doctor.location %></p>
                </div>
            </div>
            <div class="doctor-details">
                <h3>About Doctor</h3>
                <p><%= doctor.about %></p>
            </div>
            <div class="reviews">
                <h3>Patient Reviews</h3>
                <% doctor.reviews.forEach(review => { %>
                    <div class="review">
                        <p><strong><%= review.patientName %></strong></p>
                        <p><%= review.comment %></p>
                    </div>
                <% }) %>
            </div>
        </div> -->
        <!-- <div class="right-section">
            <h2 class="heading">Clinic Visit</h2>
            <div class="appointment-slots">
                <p>Available</p>
                <div class="date-selection" id="date-buttons"></div>
                <div class="slots" id="morning-slots">
                    <h3>MORNING SLOTS</h3>
                </div>
                <div class="slots" id="afternoon-slots">
                    <h3>AFTERNOON SLOTS</h3>
                </div>
                <div class="slots" id="evening-slots">
                    <h3>EVENING SLOTS</h3>
                </div>
                <button class="book-btn" id="book-btn" title="Continue Booking">Book Appointment</button>
            </div>
        </div>
    </div> -->
    <div class="container">
        <div class="left-section">
            <div class="close-btn" onclick="closeProfile()">
                <i class="fas fa-times"></i>
            </div>
            <div class="doctor-info">
                <img src="<%= doctor.image %>" alt="Doctor Image">
                <div class="details">
                    <h2>Dr. <%= doctor.name %></h2>
                    <p class="specialty">Specialization: <%= doctor.specialization %></p>
                    <p>Experience: <%= doctor.experience %></p>
                    <p>Qualification: <%= doctor.qualifications %></p>
                    <p>Languages: <%= doctor.languages %></p>
                    <p class="location">Location: <%= doctor.location %></p>
                    <p class="fee">Consultation Fee: ₹<%= doctor.consultationFee %></p>
                </div>
            </div>
            <div class="doctor-details">
                <h3>About Doctor</h3>
                <p><%= doctor.about %></p>
            </div>
            <div class="reviews">
                <h3>Patient Reviews</h3>
                <% doctor.reviews.forEach(review => { %>
                    <div class="review">
                        <p><strong><%= review.patientName %></strong></p>
                        <p><%= review.comment %></p>
                    </div>
                <% }) %>
            </div>
        </div>
        <div class="right-section">
            <h2 class="heading">Clinic Visit</h2>
            <div class="appointment-slots">
                <p>Available</p>
                <div class="date-selection" id="date-buttons"></div>
                <div class="slots" id="morning-slots">
                    <h3>MORNING SLOTS</h3>
                </div>
                <div class="slots" id="afternoon-slots">
                    <h3>AFTERNOON SLOTS</h3>
                </div>
                <div class="slots" id="evening-slots">
                    <h3>EVENING SLOTS</h3>
                </div>
                <button class="book-btn" id="book-btn" title="Continue Booking">Book Appointment</button>
            </div>
        </div>
    </div>  
    <%- include('partials/footer') %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        // document.addEventListener("DOMContentLoaded", function () {
        //     const dateContainer = document.getElementById("date-buttons");
        //     const today = new Date();
            
        //     // Generate date buttons for next 14 days
        //     for (let i = 0; i < 14; i++) {
        //         let date = new Date();
        //         date.setDate(today.getDate() + i);
        //         let button = document.createElement("button");
        //         button.textContent = `${date.toLocaleString('en-US', { weekday: 'short' })} ${date.getDate()}`;
        //         button.value = date.toISOString().split("T")[0];
        //         button.addEventListener("click", function () {
        //             document.querySelectorAll(".date-selection button").forEach(btn => btn.classList.remove("selected"));
        //             this.classList.add("selected");
        //             updateSlots(date);
        //         });
        //         dateContainer.appendChild(button);
        //     }

        //     // Define all possible slots
        //     const allSlots = {
        //         morning: ["09:00 AM", "09:15 AM", "09:30 AM", "09:45 AM", "10:00 AM", "10:15 AM", "10:30 AM", "10:45 AM", "11:00 AM", "11:15 AM", "11:30 AM"],
        //         afternoon: ["02:00 PM", "02:15 PM", "02:30 PM", "02:45 PM", "03:00 PM", "03:15 PM", "03:30 PM", "03:45 PM"],
        //         evening: ["06:00 PM", "06:15 PM", "06:30 PM", "06:45 PM", "07:00 PM", "07:15 PM", "07:30 PM", "07:45 PM"]
        //     };

        //     async function updateSlots(selectedDate) {
        //         const now = new Date();
        //         const isToday = selectedDate.toDateString() === now.toDateString();
        //         const dateStr = selectedDate.toISOString().split("T")[0];
                
        //         try {
        //             // Fetch already booked slots for this doctor on this date
        //             const response = await fetch(`/api/booked-slots?doctorId=<%= doctor.id %>&date=${dateStr}`);
        //             const bookedSlots = await response.json();
        //             console.log('Booked slots:', bookedSlots);
                    
        //             function filterSlots(slots) {
        //                 return slots.filter(slot => {
        //                     // Check if slot is booked
        //                     if (bookedSlots.includes(slot)) {
        //                         console.log(`Slot ${slot} is already booked`);
        //                         return false;
        //                     }
                            
        //                     // If today, check if slot is in past
        //                     if (isToday) {
        //                         const [time, period] = slot.split(' ');
        //                         let [hours, minutes] = time.split(':').map(Number);
                                
        //                         // Convert to 24-hour format
        //                         if (period === 'PM' && hours !== 12) hours += 12;
        //                         if (period === 'AM' && hours === 12) hours = 0;
                                
        //                         const slotTime = new Date(selectedDate);
        //                         slotTime.setHours(hours, minutes, 0, 0);
                                
        //                         return slotTime > now;
        //                     }
        //                     return true;
        //                 });
        //             }

        //             function renderSlots(slots, containerId) {
        //                 const container = document.getElementById(containerId);
        //                 container.innerHTML = `<h3>${containerId.split('-')[0].toUpperCase()} SLOTS</h3>`;
        //                 const filteredSlots = filterSlots(slots);
                        
        //                 if (filteredSlots.length > 0) {
        //                     filteredSlots.forEach(slot => {
        //                         const button = document.createElement("button");
        //                         button.textContent = slot;
        //                         button.addEventListener("click", function () {
        //                             document.querySelectorAll(".slots button").forEach(btn => btn.classList.remove("selected"));
        //                             this.classList.add("selected");
        //                         });
        //                         container.appendChild(button);
        //                     });
        //                 } else {
        //                     container.innerHTML += `<p>No slots available</p>`;
        //                 }
        //             }

        //             renderSlots(allSlots.morning, "morning-slots");
        //             renderSlots(allSlots.afternoon, "afternoon-slots");
        //             renderSlots(allSlots.evening, "evening-slots");
        //         } catch (error) {
        //             console.error("Error fetching booked slots:", error);
        //             // Fall back to showing all slots if API fails
        //             renderSlots(allSlots.morning, "morning-slots");
        //             renderSlots(allSlots.afternoon, "afternoon-slots");
        //             renderSlots(allSlots.evening, "evening-slots");
        //         }
        //     }

        //     const bookBtn = document.getElementById("book-btn");
        //     bookBtn.addEventListener("click", async function () {
        //         const selectedDate = document.querySelector(".date-selection button.selected");
        //         const selectedTime = document.querySelector(".slots button.selected");

        //         if (selectedDate && selectedTime) {
        //             try {
        //                 bookBtn.disabled = true;
        //                 bookBtn.textContent = "Booking...";
                        
        //                 const response = await fetch('/appointments', {
        //                     method: 'POST',
        //                     headers: {
        //                         'Content-Type': 'application/json'
        //                     },
        //                     body: JSON.stringify({
        //                         doctorId: '<%= doctor.id %>',
        //                         date: selectedDate.value,
        //                         time: selectedTime.textContent,
        //                         type: 'offline',
        //                         notes: ''
        //                     })
        //                 });

        //                 const result = await response.json();
        //                 console.log('Booking response:', result);
                        
        //                 if (response.ok) {
        //                     alert(`Appointment booked successfully for ${selectedDate.textContent} at ${selectedTime.textContent}`);
        //                     window.location.href = '/patient_dashboard';
        //                 } else {
        //                     // Refresh slots if booking failed
        //                     updateSlots(new Date(selectedDate.value));
        //                     alert(`Error: ${result.error || 'Failed to book appointment'}`);
        //                 }
        //             } catch (error) {
        //                 console.error('Error booking appointment:', error);
        //                 alert('Failed to book appointment. Please try again.');
        //             } finally {
        //                 bookBtn.disabled = false;
        //                 bookBtn.textContent = "Book Appointment";
        //             }
        //         } else {
        //             alert("Please select a date and time slot.");
        //         }
        //     });

        //     // Initialize slots for today
        //     updateSlots(today);
        //     if (dateContainer.firstChild) {
        //         dateContainer.firstChild.classList.add("selected");
        //     }
        // });
        document.addEventListener("DOMContentLoaded", function () {
            const dateContainer = document.getElementById("date-buttons");
            const today = new Date();
            
            // Generate date buttons for next 14 days
            for (let i = 0; i < 14; i++) {
                let date = new Date();
                date.setDate(today.getDate() + i);
                let button = document.createElement("button");
                button.textContent = `${date.toLocaleString('en-US', { weekday: 'short' })} ${date.getDate()}`;
                button.value = date.toISOString().split("T")[0];
                button.addEventListener("click", function () {
                    document.querySelectorAll(".date-selection button").forEach(btn => btn.classList.remove("selected"));
                    this.classList.add("selected");
                    updateSlots(date);
                });
                dateContainer.appendChild(button);
            }

            const allSlots = {
                morning: ["09:00 AM", "09:15 AM", "09:30 AM", "09:45 AM", "10:00 AM", "10:15 AM", "10:30 AM", "10:45 AM", "11:00 AM", "11:15 AM", "11:30 AM"],
                afternoon: ["02:00 PM", "02:15 PM", "02:30 PM", "02:45 PM", "03:00 PM", "03:15 PM", "03:30 PM", "03:45 PM"],
                evening: ["06:00 PM", "06:15 PM", "06:30 PM", "06:45 PM", "07:00 PM", "07:15 PM", "07:30 PM", "07:45 PM"]
            };

            async function updateSlots(selectedDate) {
                const now = new Date();
                const isToday = selectedDate.toDateString() === now.toDateString();
                const dateStr = selectedDate.toISOString().split("T")[0];
                
                try {
                    const response = await fetch(`/appointment/api/booked-slots?doctorId=<%= doctor.id %>&date=${dateStr}`);
                    const bookedSlots = await response.json();
                    
                    function renderSlots(slots, containerId) {
                        const container = document.getElementById(containerId);
                        container.innerHTML = `<h3>${containerId.split('-')[0].toUpperCase()} SLOTS</h3>`;
                        
                        slots.forEach(slot => {
                            const button = document.createElement("button");
                            button.textContent = slot;
                            
                            // Check if slot is booked or blocked
                            if (bookedSlots.includes(slot)) {
                                button.disabled = true;
                                button.classList.add("booked");
                                button.textContent += " (Not Available)";
                            }
                            
                            // If today, check if slot is in past
                            if (isToday) {
                                const [time, period] = slot.split(' ');
                                let [hours, minutes] = time.split(':').map(Number);
                                
                                if (period === 'PM' && hours !== 12) hours += 12;
                                if (period === 'AM' && hours === 12) hours = 0;
                                
                                const slotTime = new Date(selectedDate);
                                slotTime.setHours(hours, minutes, 0, 0);
                                
                                if (slotTime <= now) {
                                    button.disabled = true;
                                    button.textContent += " (Past)";
                                }
                            }
                            
                            button.addEventListener("click", function () {
                                document.querySelectorAll(".slots button").forEach(btn => btn.classList.remove("selected"));
                                this.classList.add("selected");
                            });
                            
                            container.appendChild(button);
                        });
                    }

                    renderSlots(allSlots.morning, "morning-slots");
                    renderSlots(allSlots.afternoon, "afternoon-slots");
                    renderSlots(allSlots.evening, "evening-slots");
                } catch (error) {
                    console.error("Error fetching slots:", error);
                }
            }

            document.getElementById("book-btn").addEventListener("click", async function () {
                const selectedDate = document.querySelector(".date-selection button.selected");
                const selectedTime = document.querySelector(".slots button.selected");
                
                if (selectedDate && selectedTime && !selectedTime.disabled) {
                    try {
                        this.disabled = true;
                        this.textContent = "Booking...";
                        
                        const response = await fetch('/appointment/appointments', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                doctorId: '<%= doctor.id %>',
                                date: selectedDate.value,
                                time: selectedTime.textContent.replace(/ \(.*\)$/, ''),
                                type: 'offline',
                                notes: ''
                            })
                        });
                        
                        const result = await response.json();
                        
                        if (response.ok) {
                            alert(`Appointment booked successfully for ${selectedDate.textContent} at ${selectedTime.textContent}`);
                            window.location.href = '/patient/dashboard';
                        } else {
                            alert(result.error || 'Failed to book appointment');
                            updateSlots(new Date(selectedDate.value));
                        }
                    } catch (error) {
                        console.error('Error booking appointment:', error);
                        alert('Failed to book appointment. Please try again.');
                    } finally {
                        this.disabled = false;
                        this.textContent = "Book Appointment";
                    }
                } else {
                    alert("Please select a valid date and time slot.");
                }
            });

            // Initialize slots for today
            updateSlots(today);
            if (dateContainer.firstChild) {
                dateContainer.firstChild.classList.add("selected");
            }
        });
        $(document).ready(function () {
            $('.fa-bars').click(function () {
                $(this).toggleClass('fa-times');
                $('.navbar').toggleClass('nav-toggle');
            });
            
            $(window).on('scroll load', function () {
                $(this).removeClass('fa-times');
                $('.navbar').removeClass('nav-toggle');
                if ($(window).scrollTop() > 30) {
                    $('header').addClass('header-active');
                } else {
                    $('header').removeClass('header-active');
                }
            });
        });

        function closeProfile() {
            window.location.href = "/patient_dashboard";
        }
    </script>
</body>
</html>