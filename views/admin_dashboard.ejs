<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MediQuick | Admin Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <link rel="stylesheet" href="/css/admin_dashboard.css">
    <style>
        :root {
            --blue: #0188df;
            --black: #444d53;
            --white: #fff;
        }

        .table-container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            font-size: 1.5rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }

        th,
        td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background: var(--blue);
            color: #fff;
            font-weight: bold;
        }

        tr:hover {
            background: #f5f5f5;
        }

        .filter-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
            align-items: center;
        }

        .filter-container select,
        .filter-container input,
        .filter-container button {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }

        .filter-container button {
            background: var(--blue);
            color: #fff;
            border: none;
            cursor: pointer;
        }

        .filter-container button:hover {
            background: #016bb5;
        }

        .delete-btn {
            background: #e3342f;
            color: #fff;
            padding: 8px 12px;
            border-radius: 4px;
            text-decoration: none;
            display: inline-block;
        }

        .delete-btn:hover {
            background: #cc1f1a;
        }

        .finance-summary {
        margin-bottom: 30px;
    }

    .summary-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .card {
        background: linear-gradient(135deg, #0188df, #016bb5);
        color: white;
        padding: 25px;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .card h3 {
        margin: 0 0 10px 0;
        font-size: 16px;
        opacity: 0.9;
    }

    .card p {
        margin: 0;
        font-size: 28px;
        font-weight: bold;
    }

        @media (max-width: 768px) {

            th,
            td {
                padding: 10px;
                font-size: 14px;
            }

            .filter-container select,
            .filter-container input,
            .filter-container button {
                width: 100%;
            }
        }

        .loading {
            text-align: center;
            padding: 20px;
            font-style: italic;
            color: #666;
        }
    </style>
</head>

<body>
    <header>
        <a href="/" class="logo"><span>M</span>edi<span>Q</span>uick</a>
        <nav class="navbar">
            <ul>
                <li><a href="/">Home</a></li>
                <li><a href="/about">About Us</a></li>
                <li><a href="/faqs">FAQs</a></li>
                <li><a href="/blogs">Blog</a></li>
                <li><a href="/contact">Contact Us</a></li>
                <li><a href="/logout">LogOut</a></li>
                <li><a href="#previous">Appointments</a></li>
                <li><a href="#upcoming">Recent SignIns</a></li>
                <li><a href="#finance">Finance</a></li>
                <li><a href="#users">Manage Users</a></li>
                <li><a href="/admin/search-data">Search data</a> </li>
                <li><a href="/admin/profile"><img src="https://static.thenounproject.com/png/638636-200.png"
                            alt="Profile Image" height="30px" width="30px"></a></li>
            </ul>
        </nav>
        <div class="fas fa-bars"></div>
    </header>

    <section id="users" class="about">
        <div class="close-btn" onclick="closeProfile()">
            <i class="fas fa-times"></i>
        </div>
        <h1 class="heading">Manage Users</h1><br>
        <div class="table-container">
            <div class="filter-container">
                <select id="user-type-filter" onchange="updateFilterInput()">
                    <option value="all">All Users</option>
                    <option value="patient">Patients</option>
                    <option value="doctor">Doctors</option>
                    <option value="supplier">Suppliers</option>
                    <option value="employee">Employees</option>
                    <option value="admin">Admins</option>
                </select>
                <input id="filter-input" type="text" placeholder="Enter filter value..." oninput="filterUsers()">
                <button onclick="clearFilters()">Clear Filters</button>
            </div>
            <table id="usersTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Filter Value</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="usersBody">
                    <tr>
                        <td colspan="4" class="loading">Loading data...</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </section>

    <section id="upcoming" class="about">
        <div class="close-btn" onclick="closeProfile()">
            <i class="fas fa-times"></i>
        </div>
        <h1 class="heading">Recent SignIns</h1><br>
        <div class="table-container">
            <table id="signinsTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Email</th>
                        <th>Date</th>
                        <th>Time</th>
                    </tr>
                </thead>
                <tbody id="signinsBody">
                    <tr>
                        <td colspan="5" class="loading">Loading data...</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </section>

    <section id="previous" class="about">
        <h1 class="heading">Appointments</h1><br>
        <div class="table-container">
            <table id="appointmentsTable">
                <thead>
                    <tr>
                        <th>Patient</th>
                        <th>Doctor</th>
                        <th>Date</th>
                        <th>Time</th>
                        <th>Fee</th>
                        <th>Revenue (10%)</th>
                    </tr>
                </thead>
                <tbody id="appointmentsBody">
                    <tr>
                        <td colspan="6" class="loading">Loading data...</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </section>

    <section id="finance" class="about">
        <h1 class="heading">Finance</h1><br>
        <div class="table-container">
            <table id="financeTable">
                <thead>
                    <tr>
                        <th>Patient</th>
                        <th>Doctor</th>
                        <th>Specialization</th> 
                        <th>Date</th>
                        <th>Fee</th>
                        <th>Revenue (10%)</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody id="financeBody">
                    <tr>
                        <td colspan="7" class="loading">Loading data...</td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4">Total Revenue</td>
                        <td id="totalFees">$0.00</td>
                        <td id="totalRevenue">$0.00</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
           
        </div>
    </section>
    <section id="earnings" class="about">
        <h1 class="heading">Earnings Reports</h1><br>
        <div class="table-container">
            <h2>Daily Earnings Summary (Since Jan 2025)</h2>
            <table id="dailyEarningsTable">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Total Appointments</th>
                        <th>Total Fees</th>
                        <th>MediQuick Revenue (10%)</th>
                    </tr>
                </thead>
                <tbody id="dailyEarningsBody">
                    <tr>
                        <td colspan="4" class="loading">Loading daily earnings data...</td>
                    </tr>
                </tbody>
            </table>
    
            <h2>Monthly Earnings Summary (Since Jan 2025)</h2>
            <table id="monthlyEarningsTable">
                <thead>
                    <tr>
                        <th>Month</th>
                        <th>Total Appointments</th>
                        <th>Total Fees</th>
                        <th>MediQuick Revenue (10%)</th>
                    </tr>
                </thead>
                <tbody id="monthlyEarningsBody">
                    <tr>
                        <td colspan="4" class="loading">Loading monthly earnings data...</td>
                    </tr>
                </tbody>
            </table>
    
            <h2>Yearly Earnings Summary (Since Jan 2025)</h2>
            <table id="yearlyEarningsTable">
                <thead>
                    <tr>
                        <th>Year</th>
                        <th>Total Appointments</th>
                        <th>Total Fees</th>
                        <th>MediQuick Revenue (10%)</th>
                    </tr>
                </thead>
                <tbody id="yearlyEarningsBody">
                    <tr>
                        <td colspan="4" class="loading">Loading yearly earnings data...</td>
                    </tr>
                </tbody>
            </table>
    
            <h2>Earnings by Doctor Specialization</h2>
            <table id="specializationEarningsTable">
                <thead>
                    <tr>
                        <th>Specialization</th>
                        <th>Total Appointments</th>
                        <th>Total Fees</th>
                        <th>MediQuick Revenue (10%)</th>
                        <th>Average Fee</th>
                    </tr>
                </thead>
                <tbody id="specializationEarningsBody">
                    <tr>
                        <td colspan="5" class="loading">Loading specialization data...</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </section>
        </div>
       

    </section>

    <%- include('partials/footer') %>

        <!-- jQuery CDN -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

        <script>
            let allUsers = [];

            // Fetch and display users data
            async function fetchUsers() {
                try {
                    const response = await fetch('/admin/users');
                    allUsers = await response.json();
                    filterUsers();
                } catch (error) {
                    console.error('Error fetching users:', error);
                    document.getElementById('usersBody').innerHTML =
                        '<tr><td colspan="4">Error loading data</td></tr>';
                }
            }

            function updateFilterInput() {
                const userType = document.getElementById('user-type-filter').value;
                const filterInput = document.getElementById('filter-input');

                switch (userType) {
                    case 'patient':
                    case 'employee':
                        filterInput.placeholder = 'Filter by email...';
                        break;
                    case 'doctor':
                        filterInput.placeholder = 'Filter by registration number...';
                        break;
                    case 'supplier':
                        filterInput.placeholder = 'Filter by supplier ID...';
                        break;
                    default:
                        filterInput.placeholder = 'Enter filter value...';
                }

                filterUsers();
            }

            function filterUsers() {
                const userType = document.getElementById('user-type-filter').value;
                const filterValue = document.getElementById('filter-input').value.toLowerCase();
                const tbody = document.getElementById('usersBody');
                tbody.innerHTML = '';

                let filteredUsers = allUsers;

                if (userType !== 'all') {
                    filteredUsers = allUsers.filter(user => user.type.toLowerCase() === userType);
                }

                filteredUsers = filteredUsers.filter(user => {
                    if (filterValue === '') return true;

                    switch (user.type.toLowerCase()) {
                        case 'patient':
                        case 'employee':
                            return user.email.toLowerCase().includes(filterValue);
                        case 'doctor':
                            return user.registrationNumber?.toLowerCase().includes(filterValue);
                        case 'supplier':
                            return user.supplierID?.toLowerCase().includes(filterValue);
                        case 'admin':
                            return user.email.toLowerCase().includes(filterValue);
                        default:
                            return true;
                    }
                });

                if (filteredUsers.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="4">No users found</td></tr>';
                    return;
                }

                filteredUsers.forEach(user => {
                    const row = document.createElement('tr');
                    let filterDisplay = '';

                    switch (user.type.toLowerCase()) {
                        case 'patient':
                        case 'employee':
                        case 'admin':
                            filterDisplay = user.email;
                            break;
                        case 'doctor':
                            filterDisplay = user.registrationNumber || 'N/A';
                            break;
                        case 'supplier':
                            filterDisplay = user.supplierID || 'N/A';
                            break;
                    }

                    row.innerHTML = `
                    <td>${user.name}</td>
                    <td>${user.type}</td>
                    <td>${filterDisplay}</td>
                    <td>
                        <a href="#" onclick="deleteUser('${user.type}', '${user._id}')" class="delete-btn">Delete</a>
                    </td>
                `;
                    tbody.appendChild(row);
                });
            }

            async function deleteUser(type, id) {
                if (!confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
                    return;
                }

                try {
                    const response = await fetch(`/admin/users/${type}/${id}`, {
                        method: 'DELETE'
                    });

                    const result = await response.json();

                    if (response.ok) {
                        alert(result.message);
                        await fetchUsers();
                    } else {
                        alert(result.error || 'Failed to delete user');
                    }
                } catch (error) {
                    console.error('Error deleting user:', error);
                    alert('Failed to delete user. Please try again.');
                }
            }

            function clearFilters() {
                document.getElementById('user-type-filter').value = 'all';
                document.getElementById('filter-input').value = '';
                updateFilterInput();
            }

            // Fetch and display signins data
            function loadSignins() {
                fetch('/admin/api/signins')
                    .then(response => response.json())
                    .then(data => {
                        const tbody = document.getElementById('signinsBody');
                        tbody.innerHTML = '';

                        if (data.error) {
                            tbody.innerHTML = `<tr><td colspan="5">${data.error}</td></tr>`;
                            return;
                        }

                        if (data.length === 0) {
                            tbody.innerHTML = '<tr><td colspan="5">No signins found</td></tr>';
                            return;
                        }

                        data.forEach(signin => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                            <td>${signin.name}</td>
                            <td>${signin.type}</td>
                            <td>${signin.email}</td>
                            <td>${signin.date}</td>
                            <td>${signin.time}</td>
                        `;
                            tbody.appendChild(row);
                        });
                    })
                    .catch(error => {
                        console.error('Error loading signins:', error);
                        document.getElementById('signinsBody').innerHTML =
                            '<tr><td colspan="5">Error loading data</td></tr>';
                    });
            }

            // Fetch and display appointments data
            function loadAppointments() {
                const tbody = document.getElementById('appointmentsBody');
                tbody.innerHTML = '<tr><td colspan="6" class="loading">Loading appointments...</td></tr>';

                fetch('/admin/api/appointments')
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        tbody.innerHTML = '';

                        if (data.error) {
                            tbody.innerHTML = `<tr><td colspan="6" class="error">${data.error}</td></tr>`;
                            return;
                        }

                        if (data.length === 0) {
                            tbody.innerHTML = '<tr><td colspan="6" class="empty">No pending appointments found</td></tr>';
                            return;
                        }

                        data.forEach(appt => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                    <td>${appt.patientName}</td>
                    <td>${appt.doctorName}</td>
                    <td>${appt.date}</td>
                    <td>${appt.time}</td>
                    <td>$${appt.fee.toFixed(2)}</td>
                    <td>$${appt.revenue.toFixed(2)}</td>
                `;
                            tbody.appendChild(row);
                        });
                    })
                    .catch(error => {
                        console.error('Error loading appointments:', error);
                        tbody.innerHTML = '<tr><td colspan="6" class="error">Error loading appointments. Please try again.</td></tr>';
                    });
            }

            // Fetch and display finance data
//             function loadFinanceData() {
//                 const tbody = document.getElementById('financeBody');
//                 tbody.innerHTML = '<tr><td colspan="6" class="loading">Loading finance data...</td></tr>';

//                 fetch('/api/admin/appointments')
//                     .then(response => {
//                         if (!response.ok) {
//                             throw new Error('Network response was not ok');
//                         }
//                         return response.json();
//                     })
//                     .then(data => {
//                         tbody.innerHTML = '';

//                         if (data.error) {
//                             tbody.innerHTML = `<tr><td colspan="6" class="error">${data.error}</td></tr>`;
//                             return;
//                         }

//                         if (data.length === 0) {
//                             tbody.innerHTML = '<tr><td colspan="6" class="empty">No financial data found</td></tr>';
//                             return;
//                         }

//                         let totalFees = 0;
//                         let totalRevenue = 0;

//                         data.forEach(appt => {
//                             const row = document.createElement('tr');
//                             row.innerHTML = `
//                                 <td>${appt.patientName}</td>
//                                 <td>${appt.doctorName}</td>
//                                 <td>${appt.date}</td>
//                                 <td>$${appt.fee.toFixed(2)}</td>
//                                 <td>$${appt.revenue.toFixed(2)}</td>
//                                 <td>${appt.status === 'completed' ? 'Completed' : 'Pending'}</td>
//                             `;
//                             tbody.appendChild(row);

//                             totalFees += parseFloat(appt.fee);
//                             totalRevenue += parseFloat(appt.revenue);
//                         });

//                         // Update totals
//                         document.getElementById('totalFees').textContent = `$${totalFees.toFixed(2)}`;
//                         document.getElementById('totalRevenue').textContent = `$${totalRevenue.toFixed(2)}`;
//                     })
//                     .catch(error => {
//                         console.error('Error loading finance data:', error);
//                         tbody.innerHTML = '<tr><td colspan="6" class="error">Error loading finance data. Please try again.</td></tr>';
//                     });
//             }
//             function loadDailyEarnings() {
//         const tbody = document.getElementById('dailyEarningsBody');
//         tbody.innerHTML = '<tr><td colspan="4" class="loading">Loading daily earnings...</td></tr>';

//         fetch('/api/admin/appointments')
//             .then(response => response.json())
//             .then(data => {
//                 if (data.error) {
//                     tbody.innerHTML = `<tr><td colspan="4">${data.error}</td></tr>`;
//                     return;
//                 }

//                 // Group by date
//                 const dailyGroups = data.reduce((acc, appt) => {
//                     const date = appt.date; // Assuming this is already formatted as YYYY-MM-DD
//                     if (!acc[date]) {
//                         acc[date] = {
//                             date,
//                             count: 0,
//                             totalFees: 0,
//                             totalRevenue: 0
//                         };
//                     }
//                     acc[date].count++;
//                     acc[date].totalFees += appt.fee;
//                     acc[date].totalRevenue += appt.revenue;
//                     return acc;
//                 }, {});

//                 // Convert to array and sort by date (newest first)
//                 const dailyArray = Object.values(dailyGroups).sort((a, b) => 
//                     new Date(b.date) - new Date(a.date));

//                 tbody.innerHTML = '';
                
//                 if (dailyArray.length === 0) {
//                     tbody.innerHTML = '<tr><td colspan="4">No appointment data found</td></tr>';
//                     return;
//                 }

//                 dailyArray.forEach(day => {
//                     const row = document.createElement('tr');
//                     row.innerHTML = `
//                         <td>${day.date}</td>
//                         <td>${day.count}</td>
//                         <td>$${day.totalFees.toFixed(2)}</td>
//                         <td>$${day.totalRevenue.toFixed(2)}</td>
//                     `;
//                     tbody.appendChild(row);
//                 });
//             })
//             .catch(error => {
//                 console.error('Error loading daily earnings:', error);
//                 tbody.innerHTML = '<tr><td colspan="4">Error loading data</td></tr>';
//             });
//     }

//     function loadSpecializationEarnings() {
//     const tbody = document.getElementById('specializationEarningsBody');
//     tbody.innerHTML = '<tr><td colspan="5" class="loading">Loading specialization data...</td></tr>';

//     fetch('/api/admin/appointments')
//         .then(response => response.json())
//         .then(appointments => {
//             if (appointments.error) {
//                 tbody.innerHTML = `<tr><td colspan="5">${appointments.error}</td></tr>`;
//                 return;
//             }

//             // Group by specialization
//             const specGroups = {};
            
//             appointments.forEach(appt => {
//                 // Make sure we're using the correct specialization field
//                 const spec = appt.specialization || 'General Physician';
                
//                 if (!specGroups[spec]) {
//                     specGroups[spec] = {
//                         specialization: spec,
//                         count: 0,
//                         totalFees: 0,
//                         totalRevenue: 0
//                     };
//                 }
                
//                 specGroups[spec].count++;
//                 specGroups[spec].totalFees += appt.fee || 0;
//                 specGroups[spec].totalRevenue += appt.revenue || 0;
//             });

//             // Convert to array and sort by total fees (highest first)
//             const specArray = Object.values(specGroups).sort((a, b) => 
//                 b.totalFees - a.totalFees);

//             tbody.innerHTML = '';
            
//             if (specArray.length === 0) {
//                 tbody.innerHTML = '<tr><td colspan="5">No specialization data found</td></tr>';
//                 return;
//             }

//             specArray.forEach(spec => {
//                 const avgFee = spec.count > 0 ? spec.totalFees / spec.count : 0;
//                 const row = document.createElement('tr');
//                 row.innerHTML = `
//                     <td>${spec.specialization}</td>
//                     <td>${spec.count}</td>
//                     <td>$${spec.totalFees.toFixed(2)}</td>
//                     <td>$${spec.totalRevenue.toFixed(2)}</td>
//                     <td>$${avgFee.toFixed(2)}</td>
//                 `;
//                 tbody.appendChild(row);
//             });
//         })
//         .catch(error => {
//             console.error('Error loading specialization earnings:', error);
//             tbody.innerHTML = '<tr><td colspan="5">Error loading data</td></tr>';
//         });
// }
// function loadMonthlyEarnings() {
//     const tbody = document.getElementById('monthlyEarningsBody');
//     tbody.innerHTML = '<tr><td colspan="4" class="loading">Loading monthly earnings...</td></tr>';

//     fetch('/api/admin/earnings')
//         .then(response => response.json())
//         .then(data => {
//             if (data.error) {
//                 tbody.innerHTML = `<tr><td colspan="4">${data.error}</td></tr>`;
//                 return;
//             }

//             tbody.innerHTML = '';
            
//             if (!data.monthly || data.monthly.length === 0) {
//                 tbody.innerHTML = '<tr><td colspan="4">No monthly earnings data found</td></tr>';
//                 return;
//             }

//             data.monthly.forEach(month => {
//                 const row = document.createElement('tr');
//                 row.innerHTML = `
//                     <td>${month.month}</td>
//                     <td>${month.count}</td>
//                     <td>$${month.totalFees.toFixed(2)}</td>
//                     <td>$${month.totalRevenue.toFixed(2)}</td>
//                 `;
//                 tbody.appendChild(row);
//             });
//         })
//         .catch(error => {
//             console.error('Error loading monthly earnings:', error);
//             tbody.innerHTML = '<tr><td colspan="4">Error loading data</td></tr>';
//         });
// }

// function loadYearlyEarnings() {
//     const tbody = document.getElementById('yearlyEarningsBody');
//     tbody.innerHTML = '<tr><td colspan="4" class="loading">Loading yearly earnings...</td></tr>';

//     fetch('/api/admin/earnings')
//         .then(response => response.json())
//         .then(data => {
//             if (data.error) {
//                 tbody.innerHTML = `<tr><td colspan="4">${data.error}</td></tr>`;
//                 return;
//             }

//             tbody.innerHTML = '';
            
//             if (!data.yearly || data.yearly.length === 0) {
//                 tbody.innerHTML = '<tr><td colspan="4">No yearly earnings data found</td></tr>';
//                 return;
//             }

//             data.yearly.forEach(year => {
//                 const row = document.createElement('tr');
//                 row.innerHTML = `
//                     <td>${year.year}</td>
//                     <td>${year.count}</td>
//                     <td>$${year.totalFees.toFixed(2)}</td>
//                     <td>$${year.totalRevenue.toFixed(2)}</td>
//                 `;
//                 tbody.appendChild(row);
//             });
//         })
//         .catch(error => {
//             console.error('Error loading yearly earnings:', error);
//             tbody.innerHTML = '<tr><td colspan="4">Error loading data</td></tr>';
//         });
// }
// function loadEarningsData() {
//     const dailyTbody = document.getElementById('dailyEarningsBody');
//     const monthlyTbody = document.getElementById('monthlyEarningsBody');
//     const yearlyTbody = document.getElementById('yearlyEarningsBody');
//     const specTbody = document.getElementById('specializationEarningsBody');

//     // Set loading states
//     dailyTbody.innerHTML = '<tr><td colspan="4" class="loading">Loading daily earnings data...</td></tr>';
//     monthlyTbody.innerHTML = '<tr><td colspan="4" class="loading">Loading monthly earnings data...</td></tr>';
//     yearlyTbody.innerHTML = '<tr><td colspan="4" class="loading">Loading yearly earnings data...</td></tr>';
//     specTbody.innerHTML = '<tr><td colspan="5" class="loading">Loading specialization data...</td></tr>';

//     // Fetch earnings data
//     fetch('/api/admin/earnings')
//         .then(response => {
//             if (!response.ok) {
//                 throw new Error('Network response was not ok');
//             }
//             return response.json();
//         })
//         .then(data => {
//             // Handle daily earnings
//             dailyTbody.innerHTML = '';
//             if (!data.daily || data.daily.length === 0) {
//                 dailyTbody.innerHTML = '<tr><td colspan="4">No daily earnings data found</td></tr>';
//             } else {
//                 data.daily.forEach(day => {
//                     const row = document.createElement('tr');
//                     row.innerHTML = `
//                         <td>${day.date}</td>
//                         <td>${day.count}</td>
//                         <td>$${day.totalFees.toFixed(2)}</td>
//                         <td>$${day.totalRevenue.toFixed(2)}</td>
//                     `;
//                     dailyTbody.appendChild(row);
//                 });
//             }

//             // Handle monthly earnings
//             monthlyTbody.innerHTML = '';
//             if (!data.monthly || data.monthly.length === 0) {
//                 monthlyTbody.innerHTML = '<tr><td colspan="4">No monthly earnings data found</td></tr>';
//             } else {
//                 data.monthly.forEach(month => {
//                     const row = document.createElement('tr');
//                     row.innerHTML = `
//                         <td>${month.month}</td>
//                         <td>${month.count}</td>
//                         <td>$${month.totalFees.toFixed(2)}</td>
//                         <td>$${month.totalRevenue.toFixed(2)}</td>
//                     `;
//                     monthlyTbody.appendChild(row);
//                 });
//             }

//             // Handle yearly earnings
//             yearlyTbody.innerHTML = '';
//             if (!data.yearly || data.yearly.length === 0) {
//                 yearlyTbody.innerHTML = '<tr><td colspan="4">No yearly earnings data found</td></tr>';
//             } else {
//                 data.yearly.forEach(year => {
//                     const row = document.createElement('tr');
//                     row.innerHTML = `
//                         <td>${year.year}</td>
//                         <td>${year.count}</td>
//                         <td>$${year.totalFees.toFixed(2)}</td>
//                         <td>$${year.totalRevenue.toFixed(2)}</td>
//                     `;
//                     yearlyTbody.appendChild(row);
//                 });
//             }
//         })
//         .catch(error => {
//             console.error('Error loading earnings data:', error);
//             dailyTbody.innerHTML = '<tr><td colspan="4">Error loading daily earnings data</td></tr>';
//             monthlyTbody.innerHTML = '<tr><td colspan="4">Error loading monthly earnings data</td></tr>';
//             yearlyTbody.innerHTML = '<tr><td colspan="4">Error loading yearly earnings data</td></tr>';
//         });

//     // Fetch specialization earnings separately from appointments
//     fetch('/api/admin/appointments')
//         .then(response => {
//             if (!response.ok) {
//                 throw new Error('Network response was not ok');
//             }
//             return response.json();
//         })
//         .then(appointments => {
//             specTbody.innerHTML = '';
//             if (!appointments || appointments.length === 0) {
//                 specTbody.innerHTML = '<tr><td colspan="5">No specialization data found</td></tr>';
//                 return;
//             }

//             // Group by specialization
//             const specGroups = {};
//             appointments.forEach(appt => {
//                 const spec = appt.specialization || 'General Physician';
//                 if (!specGroups[spec]) {
//                     specGroups[spec] = {
//                         specialization: spec,
//                         count: 0,
//                         totalFees: 0,
//                         totalRevenue: 0
//                     };
//                 }
//                 specGroups[spec].count++;
//                 specGroups[spec].totalFees += appt.fee || 0;
//                 specGroups[spec].totalRevenue += appt.revenue || 0;
//             });

//             // Convert to array and sort by total fees (highest first)
//             const specArray = Object.values(specGroups).sort((a, b) => b.totalFees - a.totalFees);

//             specArray.forEach(spec => {
//                 const avgFee = spec.count > 0 ? spec.totalFees / spec.count : 0;
//                 const row = document.createElement('tr');
//                 row.innerHTML = `
//                     <td>${spec.specialization}</td>
//                     <td>${spec.count}</td>
//                     <td>$${spec.totalFees.toFixed(2)}</td>
//                     <td>$${spec.totalRevenue.toFixed(2)}</td>
//                     <td>$${avgFee.toFixed(2)}</td>
//                 `;
//                 specTbody.appendChild(row);
//             });
//         })
//         .catch(error => {
//             console.error('Error loading specialization earnings:', error);
//             specTbody.innerHTML = '<tr><td colspan="5">Error loading specialization data</td></tr>';
//         });
// }

// function loadFinanceData() {
//     const tbody = document.getElementById('financeBody');
//     tbody.innerHTML = '<tr><td colspan="7" class="loading">Loading finance data...</td></tr>';

//     fetch('/admin/api/finance')
//         .then(response => {
//             if (!response.ok) throw new Error('Network response was not ok');
//             return response.json();
//         })
//         .then(data => {
//             tbody.innerHTML = '';

//             if (data.error) {
//                 tbody.innerHTML = `<tr><td colspan="7" class="error">${data.error}</td></tr>`;
//                 return;
//             }

//             if (data.length === 0) {
//                 tbody.innerHTML = '<tr><td colspan="7" class="empty">No financial data found</td></tr>';
//                 return;
//             }

//             data.forEach(transaction => {
//                 const row = document.createElement('tr');
//                 row.innerHTML = `
//                     <td>${transaction.patientName}</td>
//                     <td>${transaction.doctorName}</td>
//                     <td>${transaction.specialization}</td>
//                     <td>${transaction.date}</td>
//                     <td>$${transaction.fee.toFixed(2)}</td>
//                     <td>$${transaction.revenue.toFixed(2)}</td>
//                     <td><span class="status ${transaction.status}">${transaction.status}</span></td>
//                 `;
//                 tbody.appendChild(row);
//             });
//         })
//         .catch(error => {
//             console.error('Error loading finance data:', error);
//             tbody.innerHTML = '<tr><td colspan="7" class="error">Error loading finance data</td></tr>';
//         });
// }
function loadFinanceData() {
    const tbody = document.getElementById('financeBody');
    tbody.innerHTML = '<tr><td colspan="7" class="loading">Loading finance data...</td></tr>';

    fetch('/admin/api/finance')
        .then(response => {
            if (!response.ok) throw new Error('Network response was not ok');
            return response.json();
        })
        .then(data => {
            tbody.innerHTML = '';

            if (data.error) {
                tbody.innerHTML = `<tr><td colspan="7" class="error">${data.error}</td></tr>`;
                return;
            }

            if (data.length === 0) {
                tbody.innerHTML = '<tr><td colspan="7" class="empty">No financial data found</td></tr>';
                return;
            }

            let totalFees = 0;
            let totalRevenue = 0;

            data.forEach(transaction => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${transaction.patientName}</td>
                    <td>${transaction.doctorName}</td>
                    <td>${transaction.specialization}</td>
                    <td>${transaction.date}</td>
                    <td>$${transaction.fee.toFixed(2)}</td>
                    <td>$${transaction.revenue.toFixed(2)}</td>
                    <td><span class="status ${transaction.status}">${transaction.status}</span></td>
                `;
                tbody.appendChild(row);

                totalFees += parseFloat(transaction.fee);
                totalRevenue += parseFloat(transaction.revenue);
            });

            // Update totals in footer
            document.getElementById('totalFees').textContent = `$${totalFees.toFixed(2)}`;
            document.getElementById('totalRevenue').textContent = `$${totalRevenue.toFixed(2)}`;
        })
        .catch(error => {
            console.error('Error loading finance data:', error);
            tbody.innerHTML = '<tr><td colspan="7" class="error">Error loading finance data</td></tr>';
        });
}
function loadRevenueSummary() {
    fetch('/admin/api/revenue-summary')
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                console.error('Error loading revenue summary:', data.error);
                return;
            }

            document.getElementById('totalRevenue').textContent = `$${data.summary.totalRevenue.toFixed(2)}`;
            document.getElementById('totalFees').textContent = `$${data.summary.totalFees.toFixed(2)}`;
            document.getElementById('totalAppointments').textContent = data.summary.totalAppointments;
        })
        .catch(error => {
            console.error('Error loading revenue summary:', error);
        });
}

function loadEarningsData() {
    loadDailyEarnings();
    loadMonthlyEarnings();
    loadYearlyEarnings();
    loadSpecializationEarnings();
    loadRevenueSummary();
}

function loadDailyEarnings() {
    const tbody = document.getElementById('dailyEarningsBody');
    tbody.innerHTML = '<tr><td colspan="4" class="loading">Loading daily earnings...</td></tr>';

    fetch('/admin/api/earnings')
        .then(response => response.json())
        .then(data => {
            tbody.innerHTML = '';

            if (data.error) {
                tbody.innerHTML = `<tr><td colspan="4">${data.error}</td></tr>`;
                return;
            }

            if (!data.daily || data.daily.length === 0) {
                tbody.innerHTML = '<tr><td colspan="4">No daily earnings data</td></tr>';
                return;
            }

            data.daily.forEach(day => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${day.date}</td>
                    <td>${day.count}</td>
                    <td>$${day.totalFees.toFixed(2)}</td>
                    <td>$${day.totalRevenue.toFixed(2)}</td>
                `;
                tbody.appendChild(row);
            });
        })
        .catch(error => {
            console.error('Error loading daily earnings:', error);
            tbody.innerHTML = '<tr><td colspan="4">Error loading data</td></tr>';
        });
}

function loadMonthlyEarnings() {
    const tbody = document.getElementById('monthlyEarningsBody');
    tbody.innerHTML = '<tr><td colspan="4" class="loading">Loading monthly earnings...</td></tr>';

    fetch('/admin/api/earnings')
        .then(response => response.json())
        .then(data => {
            tbody.innerHTML = '';

            if (data.error) {
                tbody.innerHTML = `<tr><td colspan="4">${data.error}</td></tr>`;
                return;
            }

            if (!data.monthly || data.monthly.length === 0) {
                tbody.innerHTML = '<tr><td colspan="4">No monthly earnings data</td></tr>';
                return;
            }

            data.monthly.forEach(month => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${month.month}</td>
                    <td>${month.count}</td>
                    <td>$${month.totalFees.toFixed(2)}</td>
                    <td>$${month.totalRevenue.toFixed(2)}</td>
                `;
                tbody.appendChild(row);
            });
        })
        .catch(error => {
            console.error('Error loading monthly earnings:', error);
            tbody.innerHTML = '<tr><td colspan="4">Error loading data</td></tr>';
        });
}

function loadYearlyEarnings() {
    const tbody = document.getElementById('yearlyEarningsBody');
    tbody.innerHTML = '<tr><td colspan="4" class="loading">Loading yearly earnings...</td></tr>';

    fetch('/admin/api/earnings')
        .then(response => response.json())
        .then(data => {
            tbody.innerHTML = '';

            if (data.error) {
                tbody.innerHTML = `<tr><td colspan="4">${data.error}</td></tr>`;
                return;
            }

            if (!data.yearly || data.yearly.length === 0) {
                tbody.innerHTML = '<tr><td colspan="4">No yearly earnings data</td></tr>';
                return;
            }

            data.yearly.forEach(year => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${year.year}</td>
                    <td>${year.count}</td>
                    <td>$${year.totalFees.toFixed(2)}</td>
                    <td>$${year.totalRevenue.toFixed(2)}</td>
                `;
                tbody.appendChild(row);
            });
        })
        .catch(error => {
            console.error('Error loading yearly earnings:', error);
            tbody.innerHTML = '<tr><td colspan="4">Error loading data</td></tr>';
        });
}

function loadSpecializationEarnings() {
    const tbody = document.getElementById('specializationEarningsBody');
    tbody.innerHTML = '<tr><td colspan="5" class="loading">Loading specialization data...</td></tr>';

    fetch('/admin/api/revenue-summary')
        .then(response => response.json())
        .then(data => {
            tbody.innerHTML = '';

            if (data.error) {
                tbody.innerHTML = `<tr><td colspan="5">${data.error}</td></tr>`;
                return;
            }

            if (!data.bySpecialization || data.bySpecialization.length === 0) {
                tbody.innerHTML = '<tr><td colspan="5">No specialization data</td></tr>';
                return;
            }

            data.bySpecialization.forEach(spec => {
                const avgFee = spec.count > 0 ? spec.totalFees / spec.count : 0;
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${spec.specialization}</td>
                    <td>${spec.count}</td>
                    <td>$${spec.totalFees.toFixed(2)}</td>
                    <td>$${spec.totalRevenue.toFixed(2)}</td>
                    <td>$${avgFee.toFixed(2)}</td>
                `;
                tbody.appendChild(row);
            });
        })
        .catch(error => {
            console.error('Error loading specialization earnings:', error);
            tbody.innerHTML = '<tr><td colspan="5">Error loading data</td></tr>';
        });
}
            

            // Load data when page loads
            document.addEventListener('DOMContentLoaded', () => {
                loadSignins();
                loadAppointments();
                fetchUsers();
                updateFilterInput();
                loadFinanceData(); // NEW - Use the new finance function
                loadEarningsData();
            });

            $(document).ready(function () {
                $('.fa-bars').click(function () {
                    $(this).toggleClass('fa-times');
                    $('.navbar').toggleClass('nav-toggle');
                });
                $(window).on('scroll load', function () {
                    $('.fa-bars').removeClass('fa-times');
                    $('.navbar').removeClass('nav-toggle');
                    if ($(window).scrollTop() > 30) {
                        $('header').addClass('header-active');
                    } else {
                        $('header').removeClass('header-active');
                    }
                });
            });

            function closeProfile() {
                window.location.href = "/";
            }
        </script>
</body>

</html>