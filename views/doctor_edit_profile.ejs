<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'Edit Doctor Profile' %> - MediQuick</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap');

        :root {
            --blue: #0188df;
            --black: #444d53;
            --white: #fff;
        }

        * {
            font-family: "Roboto", sans-serif;
            margin: 0;
            padding: 0;
            text-decoration: none;
            outline: none;
            box-sizing: border-box;
            transition: all linear .2s;
        }

        html {
            font-size: 62.5%;
            overflow-x: hidden;
            scroll-behavior: smooth;
        }

        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        /* Header styles (unchanged) */
        header {
            width: 96%;
            background: var(--white);
            position: fixed;
            top: 2rem;
            left: 50%;
            transform: translate(-50%);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem 2rem;
            z-index: 1000;
        }

        header a {
            color: var(--black);
        }

        header a:hover {
            color: var(--blue);
        }

        header .logo {
            font-size: 3rem;
        }

        header .logo span {
            color: var(--blue);
        }

        header .navbar ul {
            display: flex;
            align-items: center;
            justify-content: space-between;
            list-style: none;
        }

        header .navbar ul li {
            margin: 0 1rem;
        }

        header .navbar ul li a {
            font-size: 2rem;
            color: var(--black);
        }

        header .navbar ul li a:hover {
            color: var(--blue);
        }

        header .fa-bars {
            font-size: 3rem;
            color: var(--blue);
            cursor: pointer;
            display: none;
        }

        header .fa-times {
            transform: rotate(180deg);
        }

        .header-active {
            top: 0;
            width: 100%;
            box-shadow: .1rem .3rem rgba(0, 0, 0, .3);
        }

        /* Content area styles (consistent with doctor_profile.ejs) */
        .container {
            width: 96%;
            max-width: 80rem;
            margin: 12rem auto 2rem auto;
            background: var(--white);
            padding: 2rem;
            box-shadow: .1rem .3rem rgba(0, 0, 0, .3);
            border-radius: .5rem;
        }

        h2 {
            font-size: 3rem;
            color: var(--black);
            margin-bottom: 2rem;
            text-align: center;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            font-size: 1.6rem;
            color: var(--blue);
            margin-bottom: .5rem;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 1rem;
            font-size: 1.6rem;
            border: .1rem solid var(--black);
            border-radius: .5rem;
            color: var(--black);
        }

        .form-group input:focus,
        .form-group select:focus {
            border-color: var(--blue);
            outline: none;
        }

        .error-message {
            color: red;
            font-size: 1.4rem;
            margin-top: .5rem;
            display: none;
        }

        .button {
            display: block;
            height: 3.5rem;
            width: 15rem;
            background: var(--black);
            color: var(--white);
            font-size: 1.7rem;
            text-transform: capitalize;
            border-radius: .5rem;
            cursor: pointer;
            text-align: center;
            line-height: 3.5rem;
            margin: 2rem auto;
            border: .1rem solid var(--blue);
        }

        .button:hover {
            border: .1rem solid var(--blue);
            background: var(--white);
            color: var(--blue);
            letter-spacing: .2rem;
        }

        /* Footer styles (unchanged) */
        .footer {
            background: var(--black);
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            padding: 2rem 0;
            margin-top: auto;
        }

        .footer .box {
            width: 30rem;
            margin: 2rem;
            text-align: center;
        }

        .footer .box:nth-child() {
            text-align: left;
        }

        .footer .box .logo {
            padding: 2rem 0;
            font-size: 3rem;
            color: var(--white);
        }

        .footer .box .logo:hover {
            color: var(--blue);
        }

        .footer .box .logo span {
            color: var(--blue);
        }

        .footer .box p {
            font-size: 1.5rem;
            color: var(--white);
        }

        .footer .box a {
            color: var(--white);
            font-size: 2rem;
            display: block;
            padding: .2rem 0;
        }

        .footer .box a:hover {
            text-decoration: underline;
        }

        .footer .credit {
            width: 85%;
            padding-top: 1rem;
            font-size: 2rem;
            color: var(--white);
            text-align: center;
            border-top: .2rem solid var(--white);
        }

        .footer .credit span {
            color: var(--blue);
            text-decoration: underline;
            letter-spacing: .5rem;
        }
         #errorMsg,#errlogin{
        color: red;
        text-align: center;
        margin: 10px 0;
        font-size: 1.4rem;
    }
    
    #successMsg,#successlogin{
        color: green;
        text-align: center;
        margin: 10px 0;
        font-size: 1.4rem;
    }

    .error-input {
      border: 1px solid red !important;
    }


        /* Media queries (unchanged) */
        @media (max-width: 768px) {
            html {
                font-size: 55%;
            }

            header .fa-bars {
                display: block;
            }

            header .navbar {
                position: fixed;
                top: -100rem;
                left: 0;
                width: 100%;
                background: var(--white);
                opacity: 0;
            }

            header .navbar ul {
                flex-flow: column;
                padding: 2rem 0;
            }

            header .navbar ul li {
                margin: 1rem 0;
                width: 100%;
                text-align: center;
            }

            header .navbar ul li a {
                font-size: 2rem;
                display: block;
            }

            header .nav-toggle {
                top: 5.5rem;
                opacity: 1;
            }
        }
    </style>
</head>

<body>
    <header>
        <a href="#" class="logo"><span>M</span>edi<span>Q</span>uick</a>
        <nav class="navbar">
            <ul>
                <li><a href="/">Home</a></li>
                <li><a href="/about">About Us</a></li>
                <li><a href="/faqs">FAQs</a></li>
                <li><a href="/blogs">Blog</a></li>
                <li><a href="/contact">Contact Us</a></li>
                <li><a href="/logout">Logout</a></li>
            </ul>
        </nav>
        <div class="fas fa-bars"></div>
    </header>

    <div class="container">
        <h2>Edit Doctor Profile</h2>
        <% if (doctor) { %>
            <form id="editProfileForm" action="/doctor/update-profile" method="POST">
                <div id="errorMsg"></div>
      <div id="successMsg"></div>
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" id="name" name="name" value="<%= doctor.name || '' %>" required>
                    <div class="error-message" id="name-error"></div>
                </div>
                <div class="form-group">
                    <label for="email">Email:</label>
                    <input type="email" id="email" name="email" value="<%= doctor.email || '' %>" required>
                    <div class="error-message" id="email-error"></div>
                </div>
                <div class="form-group">
                    <label for="mobile">Mobile:</label>
                    <input type="text" id="mobile" name="mobile" value="<%= doctor.mobile || '' %>" pattern="\d{10}" required>
                    <div class="error-message" id="mobile-error"></div>
                </div>
                <div class="form-group">
                    <label for="address">Address:</label>
                    <input type="text" id="address" name="address" value="<%= doctor.address || '' %>" required>
                    <div class="error-message" id="address-error"></div>
                </div>
                <div class="form-group">
                    <label for="specialization">Specialization:</label>
                    <input type="text" id="specialization" name="specialization" value="<%= doctor.specialization || '' %>" required>
                    <div class="error-message" id="specialization-error"></div>
                </div>
                <div class="form-group">
                    <label for="college">College:</label>
                    <input type="text" id="college" name="college" value="<%= doctor.college || '' %>" required>
                    <div class="error-message" id="college-error"></div>
                </div>
                <div class="form-group">
                    <label for="yearOfPassing">Year of Passing:</label>
                    <input type="text" id="yearOfPassing" name="yearOfPassing" value="<%= doctor.yearOfPassing || '' %>" required>
                    <div class="error-message" id="yearOfPassing-error"></div>
                </div>
                <div class="form-group">
                    <label for="location">Location:</label>
                    <input type="text" id="location" name="location" value="<%= doctor.location || '' %>" required>
                    <div class="error-message" id="location-error"></div>
                </div>
                <div class="form-group">
                    <label for="onlineStatus">Online Status:</label>
                    <select id="onlineStatus" name="onlineStatus" required>
                        <option value="Online" <%= doctor.onlineStatus === 'Online' ? 'selected' : '' %>>Online</option>
                        <option value="Offline" <%= doctor.onlineStatus === 'Offline' ? 'selected' : '' %>>Offline</option>
                    </select>
                    <div class="error-message" id="onlineStatus-error"></div>
                </div>
                <div class="form-group">
                    <label for="consultationFee">Consultation Fee:</label>
                    <input type="number" id="consultationFee" name="consultationFee" value="<%= doctor.consultationFee || 0 %>" min="0" required>
                    <div class="error-message" id="consultationFee-error"></div>
                </div>
                <button type="submit" class="button">Update Profile</button>
            </form>
        <% } else { %>
            <p>Doctor data not available.</p>
            <a href="/doctor_form" class="button">Go to Login</a>
        <% } %>
    </div>

    <%- include('partials/footer') %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <!-- <script>
        $(document).ready(function () {
            $('.fa-bars').click(function () {
                $(this).toggleClass('fa-times');
                $('.navbar').toggleClass('nav-toggle');
            });
            $(window).on('scroll load', function () {
                $('.fa-bars').removeClass('fa-times');
                $('.navbar').removeClass('nav-toggle');
                if ($(window).scrollTop() > 30) {
                    $('header').addClass('header-active');
                } else {
                    $('header').removeClass('header-active');
                }
            });

            // Client-side form validation (optional, for better UX)
            $('#editProfileForm').on('submit', function (e) {
        e.preventDefault(); // Prevent default form submission
        
        let isValid = true;
        $('.error-message').hide();

        // Validation code (same as before)
        const name = $('#name').val().trim();
        if (!name) {
            $('#name-error').text('Name is required').show();
            isValid = false;
        }

        const email = $('#email').val().trim();
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!email || !emailRegex.test(email)) {
            $('#email-error').text('Valid email is required').show();
            isValid = false;
        }

        const mobile = $('#mobile').val().trim();
        const mobileRegex = /^\d{10}$/;
        if (!mobile || !mobileRegex.test(mobile)) {
            $('#mobile-error').text('Mobile number must be 10 digits').show();
            isValid = false;
        }

        const consultationFee = $('#consultationFee').val();
        if (consultationFee < 0 || isNaN(consultationFee)) {
            $('#consultationFee-error').text('Consultation fee must be a non-negative number').show();
            isValid = false;
        }

        if (!isValid) return;

        // Serialize form data
        const formData = $(this).serialize();

        // Show loading state
        const submitBtn = $(this).find('button[type="submit"]');
        submitBtn.prop('disabled', true).text('Updating...');

        // Send AJAX request
        $.ajax({
            url: '/doctor/update-profile',
            type: 'POST',
            data: formData,
            success: function(response) {
                if (response.success) {
                    // Show success message and redirect
                    alert(response.message);
                    window.location.href = response.redirect;
                } else {
                    // Show error message
                    alert(response.error || 'Failed to update profile');
                    submitBtn.prop('disabled', false).text('Update Profile');
                }
            },
            error: function(xhr) {
                const error = xhr.responseJSON?.error || 'An error occurred';
                const details = xhr.responseJSON?.details || '';
                alert(`${error}: ${details}`);
                submitBtn.prop('disabled', false).text('Update Profile');
            }
        });
    });
        });
    </script>
     -->

    <script>
document.addEventListener('DOMContentLoaded', function () {
    // Toggle mobile menu
    document.querySelector('.fa-bars').addEventListener('click', function () {
        this.classList.toggle('fa-times');
        document.querySelector('.navbar').classList.toggle('nav-toggle');
    });
    
    // Header scroll effect
    window.addEventListener('scroll', function () {
        document.querySelector('.fa-bars').classList.remove('fa-times');
        document.querySelector('.navbar').classList.remove('nav-toggle');
        
        if (window.scrollY > 30) {
            document.querySelector('header').classList.add('header-active');
        } else {
            document.querySelector('header').classList.remove('header-active');
        }
    });
    
    // Form validation functions
    function validateName() {
        const name = document.getElementById("name").value.trim();
        const errorElement = document.getElementById("name-error");
        
        if (name.length < 2 || name.length > 500) {
            document.getElementById("name").classList.add('error-input');
            errorElement.textContent = 'Name must be between 2 and 500 characters';
            errorElement.style.display = 'block';
            return false;
        }
        document.getElementById("name").classList.remove('error-input');
        errorElement.style.display = 'none';
        return true;
    }

    function validateEmail() {
        const email = document.getElementById("email").value.trim();
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        const errorElement = document.getElementById("email-error");

        if (!emailRegex.test(email)) {
            document.getElementById("email").classList.add('error-input');
            errorElement.textContent = 'Please enter a valid email address';
            errorElement.style.display = 'block';
            return false;
        }
        document.getElementById("email").classList.remove('error-input');
        errorElement.style.display = 'none';
        return true;
    }
    
    function validateMobile() {
        const mobile = document.getElementById("mobile").value.trim();
        const mobileRegex = /^[0-9]{10}$/;
        const errorElement = document.getElementById("mobile-error");
        
        if (!mobileRegex.test(mobile)) {
            document.getElementById("mobile").classList.add('error-input');
            errorElement.textContent = 'Mobile number must be exactly 10 digits';
            errorElement.style.display = 'block';
            return false;
        }
        document.getElementById("mobile").classList.remove('error-input');
        errorElement.style.display = 'none';
        return true;
    }

    function validateAddress() {
        const address = document.getElementById("address").value.trim();
        const errorElement = document.getElementById("address-error");
        
        if (address.length < 5) {
            document.getElementById("address").classList.add('error-input');
            errorElement.textContent = 'Address must be at least 5 characters';
            errorElement.style.display = 'block';
            return false;
        }
        document.getElementById("address").classList.remove('error-input');
        errorElement.style.display = 'none';
        return true;
    }
    
    function validateConsultationFee() {
        const fee = document.getElementById("consultationFee").value;
        const errorElement = document.getElementById("consultationFee-error");
        
        if (isNaN(fee) || fee < 0) {
            document.getElementById("consultationFee").classList.add('error-input');
            errorElement.textContent = 'Consultation fee must be a non-negative number';
            errorElement.style.display = 'block';
            return false;
        }
        document.getElementById("consultationFee").classList.remove('error-input');
        errorElement.style.display = 'none';
        return true;
    }

    function validateForm() {
        const isNameValid = validateName();
        const isEmailValid = validateEmail();
        const isMobileValid = validateMobile();
        const isAddressValid = validateAddress();
        const isFeeValid = validateConsultationFee();

        return isNameValid && isEmailValid && isMobileValid && isAddressValid && isFeeValid;
    }
    
    // Add event listeners for validation
    document.getElementById('name').addEventListener('blur', validateName);
    document.getElementById('email').addEventListener('blur', validateEmail);
    document.getElementById('mobile').addEventListener('blur', validateMobile);
    document.getElementById('address').addEventListener('blur', validateAddress);
    document.getElementById('consultationFee').addEventListener('blur', validateConsultationFee);
    
    // Show error message
    function showError(message) {
        const errorDiv = document.getElementById('errorMsg');
        if (errorDiv) {
            errorDiv.textContent = message;
            errorDiv.style.display = 'block';
            
            // Hide success message if shown
            const successDiv = document.getElementById('successMsg');
            if (successDiv) {
                successDiv.style.display = 'none';
            }
        }
    }

    // Show success message
    function showSuccess(message) {
        const successDiv = document.getElementById('successMsg');
        if (successDiv) {
            successDiv.textContent = message;
            successDiv.style.display = 'block';
            
            // Hide error message if shown
            const errorDiv = document.getElementById('errorMsg');
            if (errorDiv) {
                errorDiv.style.display = 'none';
            }
        }
    }
    
    // Handle form submission with fetch
    document.getElementById('editProfileForm').addEventListener('submit', async function (e) {
        e.preventDefault();
        
        // Clear previous messages
        const errorDiv = document.getElementById('errorMsg');
        const successDiv = document.getElementById('successMsg');
        if (errorDiv) errorDiv.textContent = '';
        if (successDiv) successDiv.textContent = '';
        
        if (!validateForm()) {
            showError('Please correct the errors in the form.');
            return;
        }   
        
        // Get form data
        const formData = new FormData(this);
        
        // Show loading state
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.disabled = true;
        submitBtn.textContent = 'Updating...';
        
        try {
            // Send the request using fetch
            const response = await fetch('/doctor/update-profile', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams(formData).toString()
            });
            
            const data = await response.json();
            
            if (response.ok) {
                if (data.success) {
                    // Show success message and redirect
                    showSuccess(data.message);
                    setTimeout(function() {
                        window.location.href = data.redirect || '/doctor/profile';
                    }, 1500);
                } else {
                    // Show error message
                    showError(data.error || 'Failed to update profile');
                }
            } else {
                showError(data.error || 'An error occurred');
            }
        } catch (error) {
            showError('Network error occurred');
        } finally {
            // Reset button state
            submitBtn.disabled = false;
            submitBtn.textContent = originalText;
        }
    });
});
</script>
    
</body>
</html>